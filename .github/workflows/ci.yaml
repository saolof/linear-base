name: Continuous integration
on: [push, pull_request]
env:
  # Bump this number to invalidate the Github-actions cache
  cache-invalidation-key: 0
  nix-config: |
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iode.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
    substituters = https://cache.nixos.org https://hydra.iohk.io

jobs:
  cabal-test:
    name: cabal test
    env:
      NIXSHELL: nix-shell --pure
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v15
      with:
        extra_nix_config: ${{ env.nix-config }}
    - name: Build Nix dependencies
      run: $NIXSHELL --run "echo '=== Nix dependencies installed ==='"
    - name: Cache Cabal dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: cache-${{ runner.os }}-${{ hashFiles('nix/sources.json') }}-v${{ env.cache-invalidation-key }}-${{ hashFiles('linear-base.cabal') }}-${{ github.sha }}
    - name: Update Cabal's database
      run: $NIXSHELL --run "cabal update"
    - name: Build Cabal's dependencies
      run:  $NIXSHELL --run "cabal build --enable-tests --enable-benchmarks --dependencies-only"
    - name: Build
      run: $NIXSHELL --run "cabal build"
    - name: Test
      run: $NIXSHELL --run "cabal test"
    - name: Haddock
      run: $NIXSHELL --run "cabal haddock"

  ormolu:
    name: check formatting with ormolu
    env:
      NIXSHELL: nix-shell --pure
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v15
      with:
        extra_nix_config: ${{ env.nix-config }}
    - name: Build Nix dependencies
      run: $NIXSHELL --run "echo '=== Nix dependencies installed ==='"
    - name: check formatting
      run: $NIXSHELL --run 'ormolu -m check $(find . -type f -name "*.hs-boot" -o -name "*.hs")'

  stack-build:
    name: stack build
    env:
      NIXSHELL: nix-shell --pure
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v15
      with:
        extra_nix_config: ${{ env.nix-config }}
    - name: Build Nix dependencies
      run: $NIXSHELL --run "echo '=== Nix dependencies installed ==='"
    - name: Cache Stack dependencies
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: stack-${{ runner.os }}-${{ hashFiles('nix/sources.json') }}-v${{ env.cache-invalidation-key }}-${{ hashFiles('stack.yaml.lock', 'linear-base.cabal') }}
    - name: Build
      run: $NIXSHELL --run "stack build --pedantic --test --bench --no-run-tests --no-run-benchmarks"
